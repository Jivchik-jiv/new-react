{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendsList/FriendsList.module.css","components/Statistic/Statistic.module.css","components/Transactions/Transactions.module.css","components/FriendsList/FriendsListItem.jsx","components/FriendsList/FriendsList.jsx","components/Profile/Profile.jsx","components/Statistic/Statistic.jsx","components/Transactions/Transactions.jsx","App.jsx","index.js"],"names":["module","exports","FriendsListItem","avatar","name","isOnline","status","className","styles","item","src","alt","width","FriendsList","friends","title","list","map","friend","key","id","Profile","tag","location","stats","profile","description","label","quantity","followers","views","likes","defaultProps","createColor","color","i","part","Math","trunc","random","length","Statistic","statistic","statList","style","background","percentage","Transactions","items","transactionHistory","type","amount","currency","App","data","user","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17995c3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-text-color\":\"#000\",\"secondary-text-color\":\"#567\",\"profile\":\"Profile_profile__3dzvr\",\"avatar\":\"Profile_avatar__aV4u5\",\"description\":\"Profile_description__2GJPq\",\"name\":\"Profile_name__2Psdw\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendsList_friends__3rFeb\",\"title\":\"FriendsList_title__38fJ4\",\"list\":\"FriendsList_list__2VB7z\",\"item\":\"FriendsList_item__MaPkV\",\"status\":\"FriendsList_status__1GTig\",\"online\":\"FriendsList_online__1V3MN FriendsList_status__1GTig\",\"offline\":\"FriendsList_offline__sRSDc FriendsList_status__1GTig\",\"avatar\":\"FriendsList_avatar__3KgqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__3EBUI\",\"title\":\"Statistic_title__tsR9l\",\"statList\":\"Statistic_statList__2JVB9\",\"item\":\"Statistic_item__aT5at\",\"percentage\":\"Statistic_percentage__HgnMT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-bg-color\":\"rgb(226, 253, 255)\",\"transactionHistory\":\"Transactions_transactionHistory__PywuJ\"};","import React from 'react';\nimport styles from './FriendsList.module.css';\n\nconst FriendsListItem = ({avatar, name, isOnline}) => {\n\n    let status = isOnline ? \"online\" : \"offline\" \n\n    return (\n        \n         <li className={styles.item}>\n            <span className={styles[status]}>{isOnline}</span>\n            <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n            <p className=\"name\">{name}</p>\n         </li>\n    \n    )\n}\n\n\nexport default FriendsListItem;","import React from 'react';\nimport FriendsListItem from './FriendsListItem';\nimport styles from './FriendsList.module.css'\n\nconst FriendsList = ({friends}) => {\n\n\n    return (\n        <div className= {styles.friends}>\n            <h1 className= {styles.title}>Friends</h1>\n            <ul className = {styles.list}>\n                {friends.map(friend=> {\n                  \n                    return <FriendsListItem {...friend}  key={friend.id}/>\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default FriendsList;","import React from 'react';\nimport styles from './Profile.module.css'\n\nconst Profile = ({name, tag, location, avatar, stats}) => {\n\n    return (\n            <div className={styles.profile}>\n                <div className={styles.description}>\n                    <img\n                     src={avatar}\n                     alt=\"Аватар пользователя\"\n                     className={styles.avatar}\n                     />\n                    <p className={styles.name}>{name}</p>\n                    <p className={styles.tag}>&#64;{tag}</p>\n                    <p className={styles.location}>{location}</p>\n                </div>\n\n                <ul className={styles.stats}>\n                    <li>\n                        <p className={styles.label}>Followers</p>\n                        <p className={styles.quantity}>{stats.followers}</p>\n                    </li>\n                    <li>\n                        <p className={styles.label}>Views</p>\n                        <p className={styles.quantity}>{stats.views}</p>\n                    </li>\n                    <li>\n                        <p className={styles.label}>Likes</p>\n                        <p className={styles.quantity}>{stats.likes}</p>\n                    </li>\n                </ul>\n            </div>\n          \n    )\n}\n\n\nexport default Profile;\n\nProfile.defaultProps = {\n    \n}\n\n\nProfile.propTypes = {\n    \n}","import React from 'react';\nimport styles from './Statistic.module.css'\n\n\n\nconst createColor = () => {\n    let color = \"\";\n\n    for(let i=0; i<3; i++) {\n      let part=Math.trunc(Math.random()*256);\n\n      if(!color.length){\n          color+=part;\n      }else{\n          color+= \", \" + part;\n      }\n    }\n\n    return color;\n}\n\n\nconst Statistic = ({title, stats}) => {\n\n    return (\n        <div className = {styles.statistic}>\n           {title && <h2 className={styles.title}>{title}</h2>}\n\n            <ul className={styles.statList}>\n                {stats.map((item)=>{\n\n                    return <li className={styles.item} key = {item.id} style = {{background: `rgb(${createColor()})`}}>\n                    <p className={styles.label}>{item.label}</p>\n                    <p className={styles.percentage}>{item.percentage}&#37;</p>\n                  </li>\n                })}\n              \n            </ul>\n        </div>\n    )\n}\n\n\nexport default Statistic;","import React from 'react';\nimport styles from './Transactions.module.css'\n\nconst Transactions = ({items})=> {\n\n    return (\n        <table className={styles.transactionHistory}>\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Amount</th>\n                <th>Currency</th>\n              </tr>\n            </thead>\n\n\n            {items && <tbody>\n\n                {items.map(item=>{\n\n                    return <tr key = {item.id}>\n                    <td>{item.type}</td>\n                    <td>{item.amount}</td>\n                    <td>{item.currency}</td>\n                  </tr>\n                })}\n              \n            </tbody>\n            \n            }\n            \n        </table>\n    )\n}\n\n\n\nexport default Transactions;","import React from 'react';\nimport FriendsList from './components/FriendsList/FriendsList';\nimport Profile from './components/Profile/Profile';\nimport Statistic from './components/Statistic/Statistic';\nimport Transactions from './components/Transactions/Transactions';\nimport data from './data.json';\n\n\nconst App = () => {\n    return (\n        <div>\n            <h1>\n                Main page\n            </h1>\n            <Profile {...data.user}/>\n            <Statistic stats={data.statistic} title = \"Statistic\"/>\n            <FriendsList friends= {data.friends}/>\n            <Transactions items = {data.transactions}/>\n        </div>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}